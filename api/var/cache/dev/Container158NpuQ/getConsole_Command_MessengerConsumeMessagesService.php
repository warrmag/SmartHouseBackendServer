<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'console.command.messenger_consume_messages' shared service.

$this->privates['console.command.messenger_consume_messages'] = $instance = new \Symfony\Component\Messenger\Command\ConsumeMessagesCommand(new \Symfony\Component\Messenger\RoutableMessageBus(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [
    'messenger.bus.default' => ['services', 'message_bus', 'getMessageBusService.php', true],
], [
    'messenger.bus.default' => '?',
]), ($this->services['message_bus'] ?? $this->load('getMessageBusService.php'))), ($this->privates['messenger.receiver_locator'] ?? ($this->privates['messenger.receiver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []))), ($this->privates['logger'] ?? ($this->privates['logger'] = new \Symfony\Component\HttpKernel\Log\Logger())), [], new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($this->getService, [], []), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()));

$instance->setCachePoolForRestartSignal(($this->privates['cache.messenger.restart_workers_signal'] ?? $this->load('getCache_Messenger_RestartWorkersSignalService.php')));
$instance->setName('messenger:consume');
$instance->setAliases([0 => 'messenger:consume-messages']);

return $instance;
